# Which URL are we accessible at? This is used to determine the redirect URL
# and some user-accessible URLs.
url http://localhost

# Should we run in production mode? This causes the Secure flag to be set on
# cookies and may come with other production-related changes in the future.
prod true

# Where is the tmpl directory? Usually this should be a directory inside
# the fbfp source directory, though it might exist in /usr/local/share or
# /usr/share if this ever gets packaged or something.
tmpl tmpl

# Should we serve /static ourself? This should usually be handled by the
# upstream Web server such as nginx(8) or OpenBSD httpd(8). However, this might
# be useful during development or when running behind relayd(8).
static false

listen {
	# Which protocol are we listening for? This may be set to "http" for
	# plain HTTP, or "fcgi" for FastCGI. FastCGI is recommended for most
	# purposes, and both nginx(8) and OpenBSD httpd(8) may easily be
	# configured to serve FastCGI. However, if for any reason we need to
	# run behind relayd(8) or another reverse proxy, http is available.
	proto fcgi

	# Which network backend should we use? This is usually set to "tcp"
	# for plain TCP, and "unix" for UNIX domain sockets.
	net unix

	# What is the address we should listen at? This is usually set to
	# something like ":5555" for TCP, and a file path for UNIX domain
	# sockets.
	addr test.socket
}

db {
	# What type of database should we use? Currently, only "postgres" is
	# supported.
	type postgres

	# What is the connection string to database?
	# Example: postgresql:///fbfp?host=/var/run/postgresql
	conn postgresql:///fbfp?host=/var/run/postgresql
}

openid {
	# What is our OAUTH2 client ID?
	client 6d3106e1-a859-4e68-8115-8df599333fc6

	# What is the OpenID Connect endpoint? The OpenID configuration is
	# taken from this/.well-known/openid-configuration.
	endpoint https://login.microsoftonline.com/ddd3d26c-b197-4d00-a32d-1ffd84c0c295

	# [optional] This option may be used to override the OpenID authorize
	# endpoint. This is generally necessary when using Microsoft's OpenID
	# because their openid-configuration gives us the OAUTH 1.0 endpoint,
	# while we need the OAUTH 2.0 endpoint.
	authorize https://login.microsoftonline.com/ddd3d26c-b197-4d00-a32d-1ffd84c0c295/oauth2/v2.0/authorize
}
